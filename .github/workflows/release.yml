name: Release

on:
  push:
    tags:
      - "v*.*.*"
  
  # 允许手动触发
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: jodo
            asset_name: jodo-linux-amd64
          - os: macos-latest
            artifact_name: jodo
            asset_name: jodo-macos-amd64
          - os: windows-latest
            artifact_name: jodo.exe
            asset_name: jodo-windows-amd64.exe

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.asset_name }}
        path: target/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Download artifacts
        uses: actions/download-artifact@v2
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jodo-linux-amd64/jodo
          asset_name: jodo-linux-amd64
          asset_content_type: application/octet-stream
      
      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jodo-macos-amd64/jodo
          asset_name: jodo-macos-amd64
          asset_content_type: application/octet-stream
      
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jodo-windows-amd64.exe/jodo.exe
          asset_name: jodo-windows-amd64.exe
          asset_content_type: application/octet-stream
